name: CI/CD workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main

      # Update changes from the main branch
      - name: Update local repository
        run: |
          git fetch origin main
          git reset --hard FETCH_HEAD
          git clean -df
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #- name: Install Composer dependencies
        #run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      - name: Install dependencies
        run: npm install

      - name: Commit and Push if there are changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -A
          git diff-index --quiet HEAD || git commit -m "Updated assets"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #- name: Bring the application out of maintenance mode
        #run: php artisan up

      - name: SSH into Server and Execute Commands
        run: |
          # Use 'echo -e' to ensure that newlines are correctly interpreted while writing the key to a file.
          echo -e "${{ secrets.SERVER_SSH_KEY }}" > deploy_key.pem

          # Set correct permissions for the private key file.
          chmod 600 deploy_key.pem

          # Use the private key to SSH into your server. The '-o StrictHostKeyChecking=no' is optional and should be used carefully.
          # Added '-tt' to force pseudo-terminal allocation, and '-vvv' for verbose output to help with debugging.
          ssh -tt -i deploy_key.pem -o StrictHostKeyChecking=no -vvv root@31.220.53.17 << 'EOF' || true
            # Navigate to the project directory
            cd /var/www/mysite

            # Pull the latest changes from the main branch
            git pull origin main

          EOF

          # Remove the private key file after use for security.
          rm deploy_key.pem
        env:
          SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}

      - name: Compile assets
        run: npm run build

